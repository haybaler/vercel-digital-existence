# ===========================================
# Vercel Digital Existence Platform
# Environment Configuration Template
# ===========================================

# ===========================================
# üî• FIRECRAWL API (Required)
# ===========================================
# Get your API key from: https://firecrawl.dev/
FIRECRAWL_API_KEY=fc-your_firecrawl_api_key_here

# ===========================================
# ü§ñ AI MODEL APIs (Choose Your Providers)
# ===========================================
# OpenAI - Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your_openai_key_here

# Anthropic - Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=sk-ant-your_anthropic_key_here

# Google AI - Get from: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY=your_google_ai_key_here

# Cohere - Get from: https://dashboard.cohere.com/api-keys
COHERE_API_KEY=your_cohere_key_here

# Groq - Get from: https://console.groq.com/keys
GROQ_API_KEY=gsk_your_groq_key_here

# ===========================================
# üóÑÔ∏è VERCEL POSTGRES (Auto-populated in production)
# ===========================================
# These are automatically set by Vercel in production
# For local development, run: vercel env pull .env.local
POSTGRES_URL="your_postgres_connection_string"
POSTGRES_PRISMA_URL="your_prisma_connection_string"
POSTGRES_URL_NON_POOLING="your_non_pooling_connection_string"
POSTGRES_USER="your_postgres_user"
POSTGRES_HOST="your_postgres_host"
POSTGRES_PASSWORD="your_postgres_password"
POSTGRES_DATABASE="your_postgres_database"

# ===========================================
# üîê NEXTAUTH.JS CONFIGURATION
# ===========================================
# Generate with: `openssl rand -base64 32`
NEXTAUTH_SECRET="your_super_secret_key_here"

# Your application URL
NEXTAUTH_URL="http://localhost:3000"  # Local development
# NEXTAUTH_URL="https://your-app.vercel.app"  # Production

# ===========================================
# üîë OAUTH PROVIDERS (Configure as needed)
# ===========================================
# Google OAuth - Setup at: https://console.developers.google.com/
GOOGLE_CLIENT_ID="your_google_client_id.apps.googleusercontent.com"
GOOGLE_CLIENT_SECRET="your_google_client_secret"

# GitHub OAuth - Setup at: https://github.com/settings/applications/new
GITHUB_CLIENT_ID="your_github_client_id"
GITHUB_CLIENT_SECRET="your_github_client_secret"

# Discord OAuth - Setup at: https://discord.com/developers/applications
DISCORD_CLIENT_ID="your_discord_client_id"
DISCORD_CLIENT_SECRET="your_discord_client_secret"

# ===========================================
# üîî NOTIFICATION SERVICES (Optional)
# ===========================================
# Slack Webhook - Create at: https://api.slack.com/messaging/webhooks
SLACK_WEBHOOK_URL="https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"

# Discord Webhook - Create in your Discord server settings
DISCORD_WEBHOOK_URL="https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK"

# ===========================================
# ‚òÅÔ∏è VERCEL CONFIGURATION (Optional locally)
# ===========================================
# Automatically set in Vercel deployment
VERCEL_URL="your-app.vercel.app"

# ===========================================
# üìä BLOB STORAGE (Auto-configured by Vercel)
# ===========================================
# These are automatically set when you add Vercel Blob storage
# BLOB_READ_WRITE_TOKEN="vercel_blob_rw_token"

# ===========================================
# üöÄ SETUP INSTRUCTIONS
# ===========================================
# 1. Copy this file to .env.local
# 2. Fill in your API keys and secrets
# 3. For Vercel deployment, add all variables to Vercel dashboard
# 4. Run: npm run db:push to setup database
# 5. Start development: npm run dev